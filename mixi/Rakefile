require 'active_record'
require 'yaml'
require 'logger'
require File.expand_path('../db/seeds.rb', __FILE__)
require File.expand_path('../lib/comment.rb', __FILE__)
require File.expand_path('../lib/user.rb', __FILE__)
require File.expand_path('../lib/agent.rb', __FILE__)
require File.expand_path('../lib/topics.rb', __FILE__)
require File.expand_path('../lib/gmail.rb', __FILE__)

namespace :db do
  MIGRATIONS_DIR = 'db/migrate'
  DATASOURCE_CONFIG = 'config/database.yml'
  config = YAML.load_file(DATASOURCE_CONFIG)
  environment = ENV["ENVIRONMENT"] ? ENV["ENVIRONMENT"] : "development"
  ActiveRecord::Base.establish_connection(config["db"][environment])
  ActiveRecord::Base.logger = Logger.new(STDOUT)

  desc 'Migrate the database'
  task :migrate do
    ActiveRecord::Migrator.migrate(MIGRATIONS_DIR, ENV["VERSION"] ? ENV["VERSION"].to_i : nil)
  end

  desc 'Roll back the databse schema to the previous version'
  task :rollback do
    ActiveRecord::Migrator.rollback(MIGRATIONS_DIR, ENV["STEP"] ? ENV["STEP"].to_i : 1)
  end

  desc 'insert test data'
  task :seed do
    Turks::LoadSeed.truncate
    Turks::LoadSeed.load
  end
end

namespace :mixi do
  desc 'post comment'
  task :post_comment do
    logger = Logger.new File.expand_path('../logs/comment.log', __FILE__)
    logger.level = Logger::INFO
    user = Turks::MixiUser.new
    agent = Turks::MixiAgent.new
    begin
      agent.authenticate(user.email, user.password)
      topics = Turks::Topics.active_topics
      topics.each do |top|
        cid = top.community_id
        tid = top.topic_id
        agent.get("http://mixi.jp/view_bbs.pl?comm_id=#{cid}&id=#{tid}")
        Turks::Topics.add(agent, top) if Turks::Comment.max?(agent, cid, tid)
        Turks::Comment.post(agent, "bbs_comment_form", top.comment)
        logger.info "has completed uploading comment at community_id = #{cid}, topic_id = #{tid}."
      end
    rescue => e
      logger.info("cannot post comment. message=#{e.message}")
      logger.info e.backtrace
      Turks::Mail.mail("takaty2011@gmail.com", "error occured", e.backtrace)
    end
  end
end

